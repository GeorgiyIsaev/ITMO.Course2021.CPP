#pragma once
#include "MyInclude.h"

/*Контрольные задания
Задание 2. Возврат массива из функции
➢ В качестве результата работы функции может быть
указатель на массив, создаваемый в этой функции.
Дано: в функции main() объявлены два массива равного
размера. В результате вызова функции max_vect() возвращается
массив, состоящий из больших элементов, стоящих
на соответствующих местах в исходных массивах.
Требуется: изучите содержимое функции main()
и реализуйте функцию max_vect() согласно сценария
функции main(), так чтобы она возвращала адрес на созданный
ею массив с элементами – большими значениями на соответствующих
индексах исходных массивов, например, для заданных массивов
результирующий массив должен быть равен {7, 6, 5, 4, 5, 6, 7, 3}.
int main()
{
int a[]={1,2,3,4,5,6,7,2};
int b[]={7,6,5,4,3,2,1,3};
int kc = sizeof(a)/sizeof(a[0]); //Количество элементов массива
int *c; //Указатель на результирующий массив
c = max_vect(kc,a,b); //вызов функции для создания массива
for (int i = 0;i < kc; i++) //Вывод результата.
cout << c[i] << " ";
cout << endl;
delete []c; //Возврат памяти.
}*/


int* MaxVect(const int size, int* arr1, int* arr2)
{

	int* arr = new int[size];
	for (size_t i = 0; i < size; i++)
	{
		if (arr1[i]> arr2[i]) {
			arr[i] = arr1[i];
		}
		else 
			arr[i] = arr2[i];
	}
	return arr;
}





void ArrayGetFunc() {
	/*Контрольные задания
	Задание 2. Возврат массива из функции*/
	int a[] = { 1,2,3,4,5,6,7,2 };
	int b[] = { 7,6,5,4,3,2,1,3 };
	int kc = sizeof(a) / sizeof(a[0]); //Количество элементов массива
	int* c; //Указатель на результирующий массив
	c = MaxVect(kc, a, b); //вызов функции для создания массива
	for (int i = 0; i < kc; i++) //Вывод результата.
		std::cout << c[i] << " ";
	std::cout << std::endl;
	delete[]c; //Возврат памяти.
}